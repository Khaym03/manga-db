// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: manga-genres.sql

package mangadb

import (
	"context"
)

const getMangaGenresByMangaID = `-- name: GetMangaGenresByMangaID :many
SELECT
    g.genre_name,
    g.genre_id
FROM
    MangaGenre mg
    JOIN Genre g ON mg.genre_id = g.genre_id
WHERE
    mg.manga_id = ?
`

type GetMangaGenresByMangaIDRow struct {
	GenreName string `json:"genre_name"`
	GenreID   int64  `json:"genre_id"`
}

func (q *Queries) GetMangaGenresByMangaID(ctx context.Context, mangaID int64) ([]GetMangaGenresByMangaIDRow, error) {
	rows, err := q.db.QueryContext(ctx, getMangaGenresByMangaID, mangaID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetMangaGenresByMangaIDRow
	for rows.Next() {
		var i GetMangaGenresByMangaIDRow
		if err := rows.Scan(&i.GenreName, &i.GenreID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
